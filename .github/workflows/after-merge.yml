# Run after merge to trunk
on:
  push:
    branches: [master] # $default-branch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.x', '16.x']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 'yarn install' must be done at the top level, to build all the
      # cross-package symlinks
      - name: yarn install
        run: yarn install
      - name: check if git is dirty
        run: git diff --stat --exit-code
      - name: check dependencies
        run: yarn check-dependencies
      # 'yarn build' loops over all workspaces
      - name: yarn build
        run: yarn build

      - uses: ./.github/actions/save-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: notify on failure
        if: failure()
        uses: ./.github/actions/notify-status
        with:
          from: ${{ secrets.NOTIFY_EMAIL_FROM }}
          to: ${{ secrets.NOTIFY_EMAIL_TO }}
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}

  dev-canary:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # note: only use one node-version
        node-version: ['14.x']
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-node
        with:
          node-version: ${{ matrix.node-version }}

      # Adapted from https://johnny.sh/notes/publish-canary-lerna-cicd/
      - name: configure NPM token
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: check credentials
        run: npm whoami
      - name: publish to NPM dev tag
        run: |
          yarn lerna publish --conventional-prerelease --canary --exact \
            --dist-tag=dev --preid=dev-$(git rev-parse --short=7 HEAD) \
            --no-push --no-verify-access --yes
      - name: notify on failure
        if: failure()
        uses: ./.github/actions/notify-status
        with:
          from: ${{ secrets.NOTIFY_EMAIL_FROM }}
          to: ${{ secrets.NOTIFY_EMAIL_TO }}
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}

  coverage:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # note: only use one node-version
        node-version: ['14.x']
    if: ${{github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: generate coverage for all tests
        run: 'yarn test:c8-all || :'
      - name: generate coverage/html reports
        run: mkdir -p coverage/tmp && yarn c8 report --reporter=html-spa --reports-dir=coverage/html --temp-directory=coverage/tmp
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: Find Netlify site ID
        run: |
          echo "NETLIFY_SITE_ID=$(cat COVERAGE_NETLIFY_SITE_ID)" >> $GITHUB_ENV

      - uses: nwtgck/actions-netlify@v1.1
        with:
          # Production deployment if a push or merged PR.
          production-deploy: ${{github.event_name == 'push'}}
          publish-dir: coverage/html
          # SECURITY: we don't want to hand out the Github token to this action.
          # github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      - name: notify on failure
        if: failure()
        uses: ./.github/actions/notify-status
        with:
          from: ${{ secrets.NOTIFY_EMAIL_FROM }}
          to: ${{ secrets.NOTIFY_EMAIL_TO }}
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}

  benchmark:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # note: only use one node-version
        node-version: ['14.x']
    if: ${{github.event_name == 'push'}}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: benchmark changes
        env:
          AUTOBENCH_METRICS_URL: ${{ secrets.AUTOBENCH_METRICS_URL }}
        run: cd packages/swingset-runner && yarn ci:autobench
      - uses: actions/upload-artifact@v2
        with:
          name: benchmarkstats.json
          path: packages/swingset-runner/benchstats*.json
      - name: notify on failure
        if: failure()
        uses: ./.github/actions/notify-status
        with:
          from: ${{ secrets.NOTIFY_EMAIL_FROM }}
          to: ${{ secrets.NOTIFY_EMAIL_TO }}
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}
