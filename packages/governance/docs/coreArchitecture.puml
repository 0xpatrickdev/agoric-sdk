@startuml governance invitation linkages

package Legend <<Rectangle>> #EEEEEE {

    class ContractA {
        constract terms are documented above the line
        --
          accessiblePublicState
        + publicMethod()
        # methodShared()
        - closelyHeldMethod()
    }

    interface InvitationB {
        verifiable invitation fields are above the line
        --
        offerResults - below the line
    }

    note "Contracts have a 'C' marker.\nInvitations have an 'I'.\nblue arrows show verifiable connections.\ncreator-created links are labelled" as NC
}


class Registrar {
    terms: committeeSize, committeeName
    --
    Questions[]
    +questionNotifier()
    +getOpenQuestions()
    +getBallot(handle)
    #getVoterInvitation()
    -getQuestionPoserInvitation()
    -addQuestion(ballotCounterInstall, question, details)
}

note "produces VoterInvitations.\nPolymorphic over BallotCounters.\nquestions are enumerable." as N1
Registrar .. N1

class BallotCounter {
    terms\n   {ballotSpec, quorum, closingRule, tieOutcome}
    --
    +getDetails()
    +getOutcome()
    +getStats()
    +getBallotTemplate()
    #countVotes()
    -submitVote()
    -getVoterFacet()
}

note "unaware of voter registration.\n Only Registrar hands out voterFacets" as N2
BallotCounter .. N2

object BallotDetails {
    Method { CHOOSE_N | ORDER | WEIGHT }
    Type { ParamChange | Election | Survey }
    --
    question, positions, tieOutcome, maxChoices
    quorumRule
    closingRule: { timer, deadline }
    ballotHandle
    counterInstance
}

note right: "BallotDetails is a widely accessible record.\nverifiable copies are obtained from a Registrar" as BD

class ElectionManager {
    Registrar
    addQuestion()
}

object VoterFacet {
    ---
    submitVote(...positions)
}

note "VoterFacets are tightly held by voters." as VF
VF .. VoterFacet

interface VoterInvitation {
    Registrar
    --
    getVoterFacet()
}

interface QuestionPoserInvitation {
    Registrar
    --
    getVoterFacet()
}


ElectionManager -.[#blue]-|> Registrar : verifiable

Registrar *. VoterInvitation
Registrar *. QuestionPoserInvitation
Registrar --> BallotCounter : creates >
Registrar --> VoterFacet : creates >
VoterInvitation -> VoterFacet
Registrar -> BallotDetails : creates >
BallotCounter <|-.[#blue]-|> BallotDetails : verifiable


@enduml